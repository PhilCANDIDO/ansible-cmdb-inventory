---
# tasks/collect_data.yml - Collecte des données JSON pour la génération du rapport

# Rechercher tous les fichiers JSON dans le répertoire repository
- name: (collect_data) Rechercher les fichiers d'inventaire JSON
  find:
    paths: "{{ cmdb_repository_actual_dir | default(cmdb_repository.directory) }}/reports"
    patterns: "*_cmdb_inventory.json"
    recurse: no
  register: json_files
  delegate_to: "{{ cmdb_manager_host }}"
  become: false
  tags:
    - collect
    - find

- name: (collect_data) Afficher le nombre de fichiers JSON trouvés
  debug:
    msg: "{{ json_files.files | length }} fichiers JSON d'inventaire trouvés dans {{ cmdb_repository_actual_dir | default(cmdb_repository.directory) }}/reports"
  tags:
    - collect
    - debug

# Gérer le cas où aucun fichier JSON n'est trouvé
- name: (collect_data) Vérifier si des fichiers ont été trouvés
  fail:
    msg: >-
      Aucun fichier JSON d'inventaire trouvé dans {{ cmdb_repository_actual_dir | default(cmdb_repository.directory) }}/reports
      Assurez-vous que le playbook cmdb_inventory_with_repository.yml a été exécuté au préalable.
  when: json_files.files is defined and json_files.files | length == 0
  tags:
    - collect
    - check

# Utiliser directement les fichiers trouvés sans filtrage par date pour éviter les problèmes
- name: (collect_data) Conserver tous les fichiers JSON trouvés
  set_fact:
    cmdb_files: "{{ json_files.files }}"
  when: json_files.files is defined and json_files.files | length > 0
  tags:
    - collect
    - filter

# Limiter le nombre de fichiers si nécessaire
- name: (collect_data) Limiter le nombre de fichiers si requis
  set_fact:
    cmdb_files: "{{ cmdb_files[:cmdb_report.server_limit | int] }}"
  when: 
    - cmdb_files is defined and cmdb_files | length > 0
    - cmdb_report.server_limit | int > 0
    - cmdb_files | length > cmdb_report.server_limit | int
  tags:
    - collect
    - limit

- name: (collect_data) Afficher le nombre de fichiers JSON finaux
  debug:
    msg: "{{ cmdb_files | length }} fichiers JSON d'inventaire finalement retenus (server_limit: {{ cmdb_report.server_limit }})"
  when: cmdb_files is defined
  tags:
    - collect
    - debug

# Créer le répertoire pour les fichiers JSON avec des permissions larges
- name: (collect_data) Créer le répertoire pour les fichiers JSON avec des permissions larges
  file:
    path: "{{ cmdb_report.temp_dir }}/json"
    state: directory
    mode: '0777'  # Permissions larges pour éviter les problèmes
  delegate_to: localhost
  become: true  # Utiliser sudo pour être sûr de pouvoir créer avec des permissions larges
  when: cmdb_files is defined and cmdb_files | length > 0
  tags:
    - collect
    - setup

# Copier les fichiers JSON vers le répertoire temporaire en utilisant une nouvelle approche
- name: (collect_data) Copier les fichiers JSON vers le répertoire temporaire (alternative)
  shell: "cat {{ item.path }} > {{ cmdb_report.temp_dir }}/json/{{ item.path | basename }}"
  loop: "{{ cmdb_files }}"
  loop_control:
    label: "{{ item.path | basename }}"
  delegate_to: "{{ cmdb_manager_host }}"
  register: json_copy_result
  when: cmdb_files is defined and cmdb_files | length > 0
  tags:
    - collect
    - copy

# Afficher des informations sur les fichiers copiés
- name: (collect_data) Afficher des informations sur les fichiers copiés
  debug:
    msg: "Fichiers JSON copiés dans {{ cmdb_report.temp_dir }}/json/"
  when: json_copy_result is success
  tags:
    - collect
    - debug

# Vérifier que tous les fichiers ont été correctement copiés
- name: (collect_data) Vérifier les fichiers copiés
  find:
    paths: "{{ cmdb_report.temp_dir }}/json"
    patterns: "*.json"
  register: copied_files
  delegate_to: localhost
  become: false
  when: cmdb_files is defined and cmdb_files | length > 0
  tags:
    - collect
    - verify

# Afficher le nombre de fichiers correctement copiés
- name: (collect_data) Afficher le nombre de fichiers correctement copiés
  debug:
    msg: "{{ copied_files.files | length }} fichiers JSON ont été correctement copiés"
  when: copied_files is defined
  tags:
    - collect
    - verify

# Initialiser la liste des données CMDB
- name: (collect_data) Initialiser la liste des données CMDB
  set_fact:
    cmdb_data: []
    cmdb_stats: {}
  delegate_to: localhost
  become: false
  when: cmdb_files is defined and cmdb_files | length > 0
  tags:
    - collect
    - parse

# Ajouter les données de chaque fichier JSON
- name: (collect_data) Ajouter les données de chaque fichier JSON
  include_tasks: process_json.yml
  loop: "{{ cmdb_files }}"
  loop_control:
    loop_var: json_file
    label: "{{ json_file.path | basename }}"
  when: cmdb_files is defined and cmdb_files | length > 0
  tags:
    - collect
    - parse

# Afficher les statistiques après traitement
- name: (collect_data) Afficher les statistiques après traitement
  debug:
    msg: 
      - "Nombre total de serveurs traités: {{ cmdb_data | length }}"
      - "Distributions détectées: {{ cmdb_stats.os_count | default({}) | dict2items | map(attribute='key') | list | join(', ') }}"
  when: cmdb_data is defined and cmdb_data | length > 0
  tags:
    - collect
    - stats