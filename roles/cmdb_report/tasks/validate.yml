---
# tasks/validate.yml - Validation des prérequis pour la génération du rapport

# Vérifier la famille de distribution Linux pour adapter les commandes d'installation
- name: (validate) Obtenir les informations de la distribution
  setup:
    gather_subset:
      - '!all'
      - 'distribution'
  delegate_to: "{{ cmdb_manager_host }}"
  tags:
    - validate
    - os_check

# Installer les packages nécessaires pour l'environnement virtuel selon la distribution
- name: (validate) Installer les packages nécessaires pour les environnements virtuels (Debian/Ubuntu)
  apt:
    name:
      - python3-venv
      - python3-full
    state: present
  delegate_to: "{{ cmdb_manager_host }}"
  when: ansible_os_family == "Debian"
  ignore_errors: true
  register: venv_packages_debian
  tags:
    - validate
    - dependencies

- name: (validate) Installer les packages nécessaires pour les environnements virtuels (RedHat/CentOS)
  yum:
    name:
      - python3
      - python3-devel
    state: present
  delegate_to: "{{ cmdb_manager_host }}"
  when: ansible_os_family == "RedHat"
  ignore_errors: true
  register: venv_packages_redhat
  tags:
    - validate
    - dependencies

- name: (validate) Installer les packages nécessaires pour les environnements virtuels (SUSE)
  zypper:
    name:
      - python3
      - python3-devel
    state: present
  delegate_to: "{{ cmdb_manager_host }}"
  when: ansible_os_family == "Suse"
  ignore_errors: true
  register: venv_packages_suse
  tags:
    - validate
    - dependencies

# Créer le répertoire temporaire pour le traitement
- name: (validate) Créer le répertoire temporaire pour le traitement
  file:
    path: "{{ cmdb_report.temp_dir }}"
    state: directory
    mode: '0755'
  delegate_to: "{{ cmdb_manager_host }}"
  register: temp_dir_creation
  tags:
    - validate
    - tempdir

- name: (validate) Échec si le répertoire temporaire ne peut pas être créé
  fail:
    msg: "Impossible de créer le répertoire temporaire '{{ cmdb_report.temp_dir }}' sur localhost."
  when: temp_dir_creation is failed
  tags:
    - validate
    - tempdir

# Créer des sous-répertoires dans le répertoire temporaire
- name: (validate) Créer des sous-répertoires dans le répertoire temporaire
  file:
    path: "{{ cmdb_report.temp_dir }}/{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - 'json'
    - 'python'
  delegate_to: "{{ cmdb_manager_host }}"
  become: false
  tags:
    - validate
    - tempdir

# Vérifier la connectivité avec le serveur repository
- name: (validate) Vérifier la connectivité avec le serveur repository (ping)
  ping:
  delegate_to: ""{{ cmdb_manager_host }}""
  register: repository_ping
  ignore_errors: true
  when: cmdb_repository_mode == 'manager'
  tags:
    - validate
    - repository
    - connectivity

# Afficher un message d'avertissement si le serveur repository n'est pas accessible
- name: (validate) Afficher un avertissement si le serveur repository n'est pas accessible
  debug:
    msg: >-
      AVERTISSEMENT: Le serveur repository '"{{ cmdb_manager_host }}"' n'est pas accessible.
      Le mode repository sera automatiquement changé en mode 'local'.
  when: 
    - cmdb_repository_mode == 'manager'
    - repository_ping is defined and repository_ping is failed
  tags:
    - validate
    - repository
    - connectivity

# Redéfinir le mode repository si le serveur n'est pas accessible
- name: (validate) Redéfinir le mode repository en mode local si le serveur n'est pas accessible
  set_fact:
    cmdb_repository_mode: "local"
    cmdb_manager_host: "localhost"
  when: 
    - cmdb_repository_mode == 'manager'
    - repository_ping is defined and repository_ping is failed
  tags:
    - validate
    - repository
    - connectivity

# Vérifier l'existence du répertoire repository sur le serveur
- name: (validate) Vérifier l'accès au répertoire repository
  stat:
    path: "{{ cmdb_repository.directory }}/reports"
  register: repository_dir_stat
  delegate_to: ""{{ cmdb_manager_host }}""
  ignore_errors: true
  tags:
    - validate
    - repository

# Créer les répertoires repository si nécessaire (mode local uniquement)
- name: (validate) Créer les répertoires repository si nécessaire (local)
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ cmdb_repository.directory }}"
    - "{{ cmdb_repository.directory }}/reports"
    - "{{ cmdb_repository.directory }}/diagnostics"
  when: 
    - not repository_dir_stat.stat.exists | default(false)
    - cmdb_repository_mode == 'local'
  delegate_to: local
  ignore_errors: true
  tags:
    - validate
    - repository

# Tester l'accès en écriture au répertoire repository
- name: (validate) Tester l'accès en écriture au répertoire repository
  copy:
    content: "Test d'écriture pour le rapport CMDB - {{ ansible_date_time.iso8601 }}"
    dest: "{{ cmdb_repository.directory }}/reports/write_test.txt"
  delegate_to: ""{{ cmdb_manager_host }}""
  become: false
  register: write_test
  ignore_errors: true
  tags:
    - validate
    - repository
    - write_test

# Supprimer le fichier de test
- name: (validate) Supprimer le fichier de test
  file:
    path: "{{ cmdb_repository.directory }}/reports/write_test.txt"
    state: absent
  delegate_to: ""{{ cmdb_manager_host }}""
  become: false
  when: write_test is success
  ignore_errors: true
  tags:
    - validate
    - repository
    - write_test

# Afficher un message d'erreur si l'accès en écriture échoue
- name: (validate) Afficher un message d'erreur si l'accès en écriture échoue
  debug:
    msg: >-
      ERREUR: Impossible d'écrire dans le répertoire repository 
      '{{ cmdb_repository.directory }}/reports' sur le serveur '"{{ cmdb_manager_host }}"'.
      Vérifiez les permissions ou utilisez un autre répertoire.
  when: write_test is failed
  tags:
    - validate
    - repository
    - write_test

# Échec si le répertoire repository n'est pas accessible et si le mode est manager
- name: (validate) Échec si le répertoire repository n'est pas accessible (mode manager)
  fail:
    msg: >-
      Impossible d'accéder au répertoire repository '{{ cmdb_repository.directory }}/reports' 
      sur le serveur '"{{ cmdb_manager_host }}"'. Vérifiez que le répertoire existe 
      et que les permissions sont correctes.
  when: 
    - not repository_dir_stat.stat.exists | default(false)
    - cmdb_repository_mode == 'manager'
    - write_test is failed
  tags:
    - validate
    - repository

# Utiliser le répertoire de secours si le répertoire principal n'est pas accessible
- name: (validate) Utiliser le répertoire de secours si le répertoire principal n'est pas accessible
  set_fact:
    cmdb_repository_actual_dir: "{{ cmdb_repository.fallback_directory }}"
  when: 
    - not repository_dir_stat.stat.exists | default(false) or write_test is failed
    - cmdb_repository_mode == 'local'
  tags:
    - validate
    - repository

# Définir le répertoire principal si accessible
- name: (validate) Définir le répertoire principal si accessible
  set_fact:
    cmdb_repository_actual_dir: "{{ cmdb_repository.directory }}"
  when: 
    - repository_dir_stat.stat.exists | default(false) and (write_test is success or write_test is skipped)
  tags:
    - validate
    - repository

# Si envoi par email activé, vérifier la configuration
- name: (validate) Vérifier la configuration email
  assert:
    that:
      - cmdb_email.smtp.host != ""
      - cmdb_email.smtp.port | int > 0
      - cmdb_email.from != ""
      - cmdb_email.to | length > 0
    fail_msg: "Configuration email incomplète. Vérifiez les paramètres cmdb_email."
    success_msg: "Configuration email valide."
  when: cmdb_email.enabled | bool
  tags:
    - validate
    - email