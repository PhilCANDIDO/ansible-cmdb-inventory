# roles/cmdb_inventory/tasks/copy_to_repository.yml
---

# Afficher les informations de débogage des chemins
- name: (copy_to_repository) Afficher les informations des chemins et du repository
  debug:
    msg: 
      - "Repository host: {{ cmdb_inventory_repository_host }}"
      - "Repository directory: {{ cmdb_inventory_repository_dir }}"
      - "Temporary directory: {{ temp_cmdb_controller }}"
      - "Inventory hostname: {{ managed_node_name }}"
      - "Inventory format: {{ cmdb_output_format }}"
  run_once: false
  tags:
    - debug

# Vérifie l'existence des fichiers sur le contrôleur avec des appels find natifs
- name: (copy_to_repository) Vérifier l'existence des fichiers avec find
  shell: "find {{ temp_cmdb_controller | quote }} -type f -name '*{{ managed_node_name }}*' | sort"
  register: found_files
  delegate_to: localhost
  become: false
  changed_when: false
  failed_when: false
  tags:
    - files

# Afficher les fichiers trouvés (pour faciliter le débogage)
- name: (copy_to_repository) Afficher les fichiers trouvés sur le contrôleur
  debug:
    msg: "Fichiers trouvés: {{ found_files.stdout_lines | default([]) }}"
  tags:
    - debug

# Définir l'état des fichiers basé sur le résultat de find
- name: (copy_to_repository) Définir l'état des fichiers d'inventaire
  set_fact:
    inventory_files_found: "{{ found_files.stdout_lines | select('search', managed_node_name + '.*_cmdb_inventory') | list }}"
    diagnostic_files_found: "{{ found_files.stdout_lines | select('search', managed_node_name + '.*_diagnostic') | list }}"
  tags:
    - files

# Vérifie si des fichiers ont été trouvés
- name: (copy_to_repository) Afficher les fichiers d'inventaire spécifiques trouvés
  debug:
    msg: 
      - "Fichiers d'inventaire trouvés: {{ inventory_files_found | length }}"
      - "Fichiers de diagnostic trouvés: {{ diagnostic_files_found | length }}"
  tags:
    - debug

# S'assurer que les répertoires existent sur le repository avec des permissions appropriées
# Modification clé : amélioration de la création des répertoires sur le serveur repository
- name: (copy_to_repository) Vérifier l'existence des répertoires sur le repository
  stat:
    path: "{{ item }}"
  loop:
    - "{{ cmdb_inventory_repository_dir }}"
    - "{{ cmdb_inventory_repository_dir }}/reports"
    - "{{ cmdb_inventory_repository_dir }}/diagnostics"
  register: repo_dirs_exist
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  tags:
    - setup

# Correction clé : création récursive du répertoire principal ET de ses sous-répertoires
- name: (copy_to_repository) Créer le répertoire principal sur le repository
  file:
    path: "{{ cmdb_inventory_repository_dir }}"
    state: directory
    mode: '0755'
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true  # Utiliser sudo pour s'assurer des permissions
  register: main_dir_created
  when: not repo_dirs_exist.results[0].stat.exists | default(false)
  tags:
    - setup

- name: (copy_to_repository) Créer le sous-répertoire reports sur le repository
  file:
    path: "{{ cmdb_inventory_repository_dir }}/reports"
    state: directory
    mode: '0755'
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true  # Utiliser sudo pour s'assurer des permissions
  register: reports_dir_created
  when: not repo_dirs_exist.results[1].stat.exists | default(false)
  tags:
    - setup

- name: (copy_to_repository) Créer le sous-répertoire diagnostics sur le repository
  file:
    path: "{{ cmdb_inventory_repository_dir }}/diagnostics"
    state: directory
    mode: '0755'
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true  # Utiliser sudo pour s'assurer des permissions
  register: diagnostics_dir_created
  when: not repo_dirs_exist.results[2].stat.exists | default(false)
  tags:
    - setup

# Assurons-nous que les permissions sont correctes
- name: (copy_to_repository) Ajuster les permissions des répertoires sur le repository
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user | default('deploy') }}"  # Utilisez l'utilisateur approprié
    group: "{{ ansible_user | default('deploy') }}"  # Utilisez le groupe approprié
  loop:
    - "{{ cmdb_inventory_repository_dir }}"
    - "{{ cmdb_inventory_repository_dir }}/reports"
    - "{{ cmdb_inventory_repository_dir }}/diagnostics"
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true  # Utiliser sudo pour s'assurer des permissions
  tags:
    - setup

# Afficher le résultat de la création des répertoires
- name: (copy_to_repository) Afficher le résultat de la création des répertoires
  debug:
    msg: |
      Répertoires créés/vérifiés:
      - Principal: {{ main_dir_created.changed | default(false) }}
      - Reports: {{ reports_dir_created.changed | default(false) }}
      - Diagnostics: {{ diagnostics_dir_created.changed | default(false) }}
  tags:
    - debug

# Tester l'accès en écriture sur le repository (pour vérifier les permissions)
- name: (copy_to_repository) Tester l'accès en écriture sur le repository
  shell: "touch {{ cmdb_inventory_repository_dir }}/reports/write_test_{{ managed_node_name }}.tmp && rm -f {{ cmdb_inventory_repository_dir }}/reports/write_test_{{ managed_node_name }}.tmp"
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true
  register: write_test
  changed_when: false
  failed_when: false
  tags:
    - test

# Afficher les résultats du test d'écriture
- name: (copy_to_repository) Afficher les résultats du test d'écriture
  debug:
    msg: "Test d'écriture réussi: {{ write_test is success }}"
  tags:
    - debug

# Si l'écriture directe est impossible, tenter de copier sur /tmp d'abord
- name: (copy_to_repository) Définir le répertoire alternatif si le test échoue
  set_fact:
    actual_repository_dir: "{{ '/tmp' if not write_test is success else cmdb_inventory_repository_dir }}"
  tags:
    - setup

# Afficher le répertoire effectif utilisé
- name: (copy_to_repository) Afficher le répertoire effectif utilisé
  debug:
    msg: "Répertoire repository effectif: {{ actual_repository_dir }}"
  tags:
    - debug

# Si le répertoire alternatif est /tmp, il faut s'assurer qu'il existe aussi
- name: (copy_to_repository) Créer les répertoires temporaires alternatifs si nécessaire
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ actual_repository_dir }}/reports"
    - "{{ actual_repository_dir }}/diagnostics"
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  when: actual_repository_dir == '/tmp'
  become: true
  tags:
    - setup

# Bloc pour le traitement des fichiers d'inventaire
- name: (copy_to_repository) Traitement des fichiers d'inventaire
  block:
    # Utiliser une boucle sur les fichiers trouvés pour les fichiers d'inventaire
    - name: (copy_to_repository) Copier les fichiers d'inventaire trouvés vers le repository
      copy:
        src: "{{ item }}"
        dest: "{{ actual_repository_dir }}/reports/{{ item | basename }}"
        mode: '0644'
      loop: "{{ inventory_files_found }}"
      delegate_to: localhost
      register: inventory_copy_result
      when: inventory_files_found | length > 0

    # Si le répertoire alternatif est utilisé, déplacer les fichiers vers l'emplacement final
    - name: (copy_to_repository) Déplacer les fichiers d'inventaire du répertoire temporaire vers le répertoire final
      shell: "cp {{ actual_repository_dir }}/reports/{{ item | basename }} {{ cmdb_inventory_repository_dir }}/reports/"
      loop: "{{ inventory_files_found }}"
      delegate_to: "{{ cmdb_inventory_repository_host }}"
      become: true
      register: inventory_move_result
      when: 
        - actual_repository_dir != cmdb_inventory_repository_dir
        - inventory_files_found | length > 0
  rescue:
    - name: (copy_to_repository) Signaler l'échec de la copie des fichiers d'inventaire
      debug:
        msg: "Échec de la copie des fichiers d'inventaire. Vérifiez les permissions et les chemins."
  when: inventory_files_found | length > 0
  tags:
    - copy_inventory

# Bloc pour le traitement des fichiers de diagnostic
- name: (copy_to_repository) Traitement des fichiers de diagnostic
  block:
    # Utiliser une boucle sur les fichiers trouvés pour les fichiers de diagnostic
    - name: (copy_to_repository) Copier les fichiers de diagnostic trouvés vers le repository
      copy:
        src: "{{ item }}"
        dest: "{{ actual_repository_dir }}/diagnostics/{{ item | basename }}"
        mode: '0644'
      loop: "{{ diagnostic_files_found }}"
      delegate_to: localhost
      register: diagnostic_copy_result
      when: diagnostic_files_found | length > 0

    # Si le répertoire alternatif est utilisé, déplacer les fichiers vers l'emplacement final
    - name: (copy_to_repository) Déplacer les fichiers de diagnostic du répertoire temporaire vers le répertoire final
      shell: "cp {{ actual_repository_dir }}/diagnostics/{{ item | basename }} {{ cmdb_inventory_repository_dir }}/diagnostics/"
      loop: "{{ diagnostic_files_found }}"
      delegate_to: "{{ cmdb_inventory_repository_host }}"
      become: true
      register: diagnostic_move_result
      when: 
        - actual_repository_dir != cmdb_inventory_repository_dir
        - diagnostic_files_found | length > 0
  rescue:
    - name: (copy_to_repository) Signaler l'échec de la copie des fichiers de diagnostic
      debug:
        msg: "Échec de la copie des fichiers de diagnostic. Vérifiez les permissions et les chemins."
  when: diagnostic_files_found | length > 0
  tags:
    - copy_diagnostic

# Journaliser le succès du transfert
- name: (copy_to_repository) Journaliser le succès du transfert
  lineinfile:
    path: "{{ cmdb_inventory_repository_dir }}/inventaire_success.log"
    line: "{{ inventory_hostname }} - {{ ansible_date_time.iso8601 | default(now()) }}"
    create: yes
  delegate_to: "{{ cmdb_inventory_repository_host }}"
  become: true
  ignore_errors: true
  when: 
    - (inventory_files_found | length > 0 and inventory_copy_result is defined and inventory_copy_result is success) or
      (force_copy_files | default(false))
  tags:
    - log

# Résumé des opérations effectuées
- name: (copy_to_repository) Résumé des opérations
  debug:
    msg: 
      - "Résumé du transfert pour {{ inventory_hostname }}"
      - "Fichiers d'inventaire traités: {{ inventory_files_found | length }}"
      - "Fichiers de diagnostic traités: {{ diagnostic_files_found | length }}"
      - "Répertoire utilisé: {{ actual_repository_dir }}"
  tags:
    - summary